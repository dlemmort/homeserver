services:
###########################################################################
###########################################################################
##
##  Docker Compose File: Postgresql
##  Function: Postgresql Database Server
##
##  Documentation: https://hub.docker.com/_/postgres
##
###########################################################################
###########################################################################
  postgresql:
    image: docker.io/library/postgres:latest
    container_name: postgresql
    restart: unless-stopped
    networks:
      - mediastack
    user: ${PUID:?err}:${PGID:?err}
    ports:
      - ${POSTGRESQL_PORT:?err}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${FOLDER_FOR_CONFIG:?err}/postgresql:/var/lib/postgresql/data
    environment:
      - TZ=${TIMEZONE:?err}
      - POSTGRES_DB=${AUTHENTIK_DATABASE:?err}
      - POSTGRES_USER=${POSTGRESQL_USERNAME:?err}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD:?err}

###########################################################################
###########################################################################
##
##  Docker Compose File: Grafana
##  Function: Visual Monitoring Dashboard
##
##  Documentation: http://docs.grafana.org/installation/docker/
##
###########################################################################
###########################################################################
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    user: ${PUID:?err}:${PGID:?err}
    depends_on:
      - crowdsec
    networks:
      - mediastack
    ports:
      - ${WEBUI_PORT_GRAFANA:?err}:3000
    volumes:
      - /var/log:/var/dockerhost:ro
      - ${FOLDER_FOR_CONFIG:?err}/grafana:/var/lib/grafana
    environment:
      - TZ=${TIMEZONE:?err}
    labels:
      - traefik.enable=true
    # ROUTERS
      - traefik.http.routers.grafana.service=grafana
      - traefik.http.routers.grafana.rule=Host(`grafana.${CLOUDFLARE_DNS_ZONE:?err}`)
      - traefik.http.routers.grafana.entrypoints=secureweb
      - traefik.http.routers.grafana.middlewares=authentik-forwardauth@file,security-headers@file,traefik-bouncer@file
    # SERVICES
      - traefik.http.services.grafana.loadbalancer.server.scheme=http
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    # MIDDLEWARES